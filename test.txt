
#### Kodni optimizatsiya qilish kere nima kamchligi borligini topib

```python
from django.db import models
from dataclasses import dataclass
from typing import List

class Product(models.Model):
    name = models.CharField(max_length=255)
    price = models.DecimalField(max_digits=10, decimal_places=2)
    description = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)


class Order(models.Model):
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    total_price = models.DecimalField(max_digits=10, decimal_places=2)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)


class OrderProduct(models.Model):
    order = models.ForeignKey(Order, on_delete=models.CASCADE)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    quantity = models.IntegerField()
    price = models.DecimalField(max_digits=10, decimal_places=2)





@dataclass
class OrderSchema:
    product_id: int
    quantity: int


def bulk_create_order(user, orders :List[OrderSchema]):
    for order in orders:
        _order = Order.objects.create(
            user=user,
            total_price=0
        )
        product = Product.objects.get(id=order.product_id)
        OrderProduct.objects.create(
            order=_order,
            product=product,
            quantity=order.quantity,
            price=product.price
        )
        _order.total_price = product.price * order.quantity
        _order.save()
```

#### Report chiqazish kere korinishi qaysi soatda kopro sotilvoti product total price boyicha ordering qilish kere
```python
results = [
    {
        "product_id": 1,
        "product_name": "Banana",
        "hour": 23,
        "total_price": "145000"
    },
    {
        "product_id": 2,
        "product_name": "Apple",
        "hour": 21,
        "total_price": "11000"
    }
]
```